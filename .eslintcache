[{"C:\\Users\\15103\\interface_react\\src\\index.js":"1","C:\\Users\\15103\\interface_react\\src\\reportWebVitals.js":"2","C:\\Users\\15103\\interface_react\\src\\App.js":"3","C:\\Users\\15103\\interface_react\\src\\components\\AddAppointments.js":"4","C:\\Users\\15103\\interface_react\\src\\components\\ListAppointments.js":"5","C:\\Users\\15103\\interface_react\\src\\components\\SearchAppointments.js":"6"},{"size":658,"mtime":1609812040264,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":4731,"mtime":1610089815241,"results":"10","hashOfConfig":"8"},{"size":5662,"mtime":1609924407853,"results":"11","hashOfConfig":"8"},{"size":3300,"mtime":1610091722055,"results":"12","hashOfConfig":"8"},{"size":3326,"mtime":1610089454959,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"pi40tb",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Users\\15103\\interface_react\\src\\index.js",[],["28","29"],"C:\\Users\\15103\\interface_react\\src\\reportWebVitals.js",[],"C:\\Users\\15103\\interface_react\\src\\App.js",["30"],"import { without, findIndex } from \"lodash\";\nimport React, { Component } from \"react\";\nimport AddAppointments from \"./components/AddAppointments\";\nimport ListAppointments from \"./components/ListAppointments\";\nimport SearchAppointments from \"./components/SearchAppointments\";\nimport \"./css/App.css\";\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      myAppointments: [],\n      lastIndex: 0,\n      formDisplay: false,\n      orderBy: \"petName\",\n      orderDir: \"asc\",\n      queryText: \"\",\n    };\n    //we are binding the this key word for our constructure, so it can be used in the method we specify\n    this.deleteAppointment = this.deleteAppointment.bind(this);\n    //so when deleteApp uses the this key word its able to use this object\n\n    this.toggleForm = this.toggleForm.bind(this);\n    this.addAppointment = this.addAppointment.bind(this);\n    this.changeOrder = this.changeOrder.bind(this);\n    this.searchApts = this.searchApts.bind(this);\n    this.updateInfo = this.updateInfo.bind(this);\n  }\n\n  toggleForm() {\n    this.setState({\n      formDisplay: !this.state.formDisplay,\n    });\n  }\n\n  searchApts(query) {\n    this.setState({ queryText: query });\n  }\n\n  changeOrder(order, dir) {\n    this.setState({\n      orderBy: order,\n      orderDir: dir,\n    });\n  }\n\n  deleteAppointment(apt) {\n    let tempApts = this.state.myAppointments;\n    //lodash methoid without\n    //take an array feed, it a recored with something you want to delete.\n    tempApts = without(tempApts, apt);\n\n    this.setState({ myAppointments: tempApts });\n  }\n\n  addAppointment(apt) {\n    let tempApts = this.state.myAppointments;\n    apt.aptId = this.state.lastIndex;\n    //push element into the array\n    tempApts.unshift(apt); //unshift will pull apt at begining of array\n    this.setState({\n      myAppointments: tempApts, //new version of our array\n      lastIndex: this.state.lastIndex + 1, //update that index\n    });\n  }\n  updateInfo(name, value, id) {\n    let tempApts = this.state.myAppointments;\n    let aptIndex = findIndex(this.state.myAppointments, {\n      aptId: id,\n    });\n    tempApts[aptIndex][name] = value;\n    this.setState({\n      myAppointments: tempApts,\n    });\n  }\n\n  componentDidMount() {\n    fetch(\"./data.json\")\n      .then((response) => response.json())\n      .then((result) => {\n        const apts = result.map((item) => {\n          item.aptId = this.state.lastIndex;\n          this.setState({ lastIndex: this.state.lastIndex + 1 });\n          return item;\n        });\n        this.setState({\n          myAppointments: apts,\n        });\n      });\n  }\n\n  render() {\n    {\n      /*\n    \n        const listItems = this.state.myAppointments.map((item) => (\n      <div>\n        <p>Pet Name: {item.petName}</p>\n\n        <p>Owners Name: {item.ownerName}</p>\n        <br />\n      </div>\n    ));\n    \n    \n    \n        */\n    }\n\n    let order;\n    let filteredApts = this.state.myAppointments;\n    if (this.state.orderDir === \"asc\") {\n      order = 1;\n    } else {\n      order = -1;\n    }\n\n    filteredApts = filteredApts\n      .sort((a, b) => {\n        if (\n          a[this.state.orderBy].toLowerCase() <\n          b[this.state.orderBy].toLowerCase()\n        ) {\n          return -1 * order;\n        } else {\n          return 1 * order;\n        }\n      })\n      .filter((eachItem) => {\n        return (\n          eachItem[\"petName\"]\n            .toLowerCase()\n            .includes(this.state.queryText.toLowerCase()) ||\n          eachItem[\"ownerName\"]\n            .toLowerCase()\n            .includes(this.state.queryText.toLowerCase()) ||\n          eachItem[\"aptNotes\"]\n            .toLowerCase()\n            .includes(this.state.queryText.toLowerCase())\n        );\n      });\n\n    return (\n      <main className=\"page bg-white\" id=\"petratings\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12 bg-white\">\n              <div className=\"container\">\n                <AddAppointments\n                  formDisplay={this.state.formDisplay}\n                  toggleForm={this.toggleForm}\n                  addAppointment={this.addAppointment}\n                />\n                <SearchAppointments\n                  orderBy={this.state.orderBy}\n                  orderDir={this.state.orderDir}\n                  changeOrder={this.changeOrder}\n                  searchApts={this.searchApts}\n                />\n                <ListAppointments\n                  appointments={filteredApts}\n                  deleteAppointment={this.deleteAppointment}\n                  updateInfo={this.updateInfo}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    );\n  }\n}\n","C:\\Users\\15103\\interface_react\\src\\components\\AddAppointments.js",[],"C:\\Users\\15103\\interface_react\\src\\components\\ListAppointments.js",[],"C:\\Users\\15103\\interface_react\\src\\components\\SearchAppointments.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":93,"column":5,"nodeType":"37","messageId":"38","endLine":108,"endColumn":6},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-global-assign","no-unsafe-negation"]